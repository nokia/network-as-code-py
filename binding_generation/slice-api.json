{
  "openapi": "3.0.2",
  "info": {
    "title": "Slice",
    "description": "Slice management, creating and deleting network slices.",
    "version": "0.1.0"
  },
  "paths": {
    "/slices": {
      "get": {
        "summary": "Returns All Slices",
        "description": "Returns All created Network Slices",
        "operationId": "getAllSlices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getallslices",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SliceData"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "slice"
        ],
        "summary": "Create a network slice.",
        "description": "Create a network slice.",
        "operationId": "create_slice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Slice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/slices/{id}": {
      "get": {
        "tags": [
          "slice"
        ],
        "summary": "Get network slice data.",
        "description": "Get network slice data.",
        "operationId": "get_slice",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "slice"
        ],
        "summary": "Delete network slice.",
        "description": "Delete network slice. The slice state must not be active to perform this operation.",
        "operationId": "delete_slice",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/slices/{id}/activate": {
      "post": {
        "tags": [
          "slice"
        ],
        "summary": "Activate a network slice.",
        "description": "Activate a network slice.",
        "operationId": "activate_slice",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/slices/{id}/deactivate": {
      "post": {
        "tags": [
          "slice"
        ],
        "summary": "Deactivate a network slice.",
        "description": "Deactivate a network slice. The slice state must be active to be able to perform this operation.",
        "operationId": "deactivate_slice",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "RapidApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-RapidAPI-Key"
      }
    },
    "schemas": {
      "AdministrativeState": {
        "title": "AdministrativeState",
        "enum": [
          "LOCKED",
          "SHUTTING_DOWN",
          "UNLOCKED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AreaOfService": {
        "title": "AreaOfService",
        "type": "object",
        "properties": {
          "poligon": {
            "title": "Poligon",
            "minItems": 4,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point"
            },
            "description": "Corners of the poligon defining the area that must be covered. The actual area may be larger, depending on cell areas."
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NetworkIdentifier": {
        "title": "NetworkIdentifier",
        "required": [
          "mcc",
          "mnc"
        ],
        "type": "object",
        "properties": {
          "mcc": {
            "title": "Mcc",
            "pattern": "[0-9]{3}|[a-zA-Z]{2}|[A-Za-z]{3,}",
            "type": "string",
            "description": "Country name, short name, or MCC code. One cannot use country names if a country has several MCC codes, such as the US."
          },
          "mnc": {
            "title": "Mnc",
            "pattern": "[0-9]{2,3}",
            "type": "string"
          }
        }
      },
      "Point": {
        "title": "Point",
        "type": "object",
        "properties": {
          "lat": {
            "title": "Latitude",
            "maximum": 90.0,
            "minimum": -90.0,
            "type": "number",
            "default": 0
          },
          "lon": {
            "title": "Longitude",
            "maximum": 180.0,
            "minimum": -180.0,
            "type": "number",
            "default": 0
          }
        }
      },
      "Slice": {
        "title": "Slice",
        "required": [
          "notificationUrl",
          "networkIdentifier",
          "sliceInfo",
          "areaOfService"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 64,
            "minLength": 8,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
            "type": "string",
            "description": "Optional short name for the slice. Must be ASCII characters, digits and dash. Like name of an event, such as \"Concert-2029-Big-Arena\"."
          },
          "notificationUrl": {
            "title": "Notificationurl",
            "type": "string",
            "description": "Contact attached to the order to send back information regarding this order."
          },
          "notificationAuthToken": {
            "title": "Notificationauthtoken",
            "type": "string",
            "description": "Authorization token for notification sending."
          },
          "networkIdentifier": {
            "$ref": "#/components/schemas/NetworkIdentifier"
          },
          "sliceInfo": {
            "$ref": "#/components/schemas/SliceInfo"
          },
          "areaOfService": {
            "$ref": "#/components/schemas/AreaOfService"
          },
          "maxDataConnections": {
            "title": "Maxdataconnections",
            "minimum": 0.0,
            "type": "integer",
            "description": "Maximum number of data connection sessions in the slice."
          },
          "maxDevices": {
            "title": "Maxdevices",
            "minimum": 0.0,
            "type": "integer",
            "description": "Maximum number of devices using the slice."
          },
          "sliceDownlinkThroughput": {
            "$ref": "#/components/schemas/Throughput"
          },
          "sliceUplinkThroughput": {
            "$ref": "#/components/schemas/Throughput"
          },
          "deviceDownlinkThroughput": {
            "$ref": "#/components/schemas/Throughput"
          },
          "deviceUplinkThroughput": {
            "$ref": "#/components/schemas/Throughput"
          }
        }
      },
      "SliceData": {
        "title": "SliceData",
        "required": [
          "slice",
          "csi_id",
          "order_id",
          "state"
        ],
        "type": "object",
        "properties": {
          "slice": {
            "$ref": "#/components/schemas/Slice"
          },
          "startPollingAt": {
            "title": "Startpollingat",
            "type": "integer",
            "description": "Timestamp of service order polling started, in seconds since unix epoch"
          },
          "csi_id": {
            "title": "Csi Id",
            "type": "string"
          },
          "order_id": {
            "title": "Order Id",
            "type": "string"
          },
          "administrativeState": {
            "$ref": "#/components/schemas/AdministrativeState"
          },
          "state": {
            "title": "State",
            "type": "string"
          }
        }
      },
      "SliceInfo": {
        "title": "SliceInfo",
        "required": [
          "service_type"
        ],
        "type": "object",
        "properties": {
          "service_type": {
            "title": "Service Type",
            "anyOf": [
              {
                "$ref": "#/components/schemas/SliceTypeName"
              },
              {
                "type": "integer"
              }
            ],
            "description": "Name or ID of slice type."
          },
          "differentiator": {
            "title": "Differentiator",
            "pattern": "^[A-Fa-f0-9]{6}$",
            "type": "string",
            "description": "Differentiator identifies the slice within the type."
          }
        }
      },
      "SliceTypeName": {
        "title": "SliceTypeName",
        "enum": [
          "eMBB",
          "URLLC",
          "MIoT"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Throughput": {
        "title": "Throughput",
        "type": "object",
        "properties": {
          "guaranteed": {
            "title": "Guaranteed",
            "type": "number",
            "description": "Guaranteed throughput in kbps."
          },
          "maximum": {
            "title": "Maximum",
            "type": "number",
            "description": "Maximum throughput in kbps."
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "RapidApiKey": []
    }
  ]
}
